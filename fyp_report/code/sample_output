sim-bpred: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: sim-bpred base_heapsort454574856 

sim: simulation started @ Wed Apr 28 04:07:08 2004, options follow:

sim-bpred: This simulator implements a branch predictor analyzer.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-bpred                  bimod # branch predictor type {nottaken|taken|bimod|2lev|comb}
-bpred:bimod   2048 # bimodal predictor config (<table size>)
-bpred:2lev    1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb    1024 # combining predictor config (<meta_table_size>)
-bpred:ras                 8 # return address stack size (0 for no return stack)
-bpred:btb     512 4 # BTB config (<num_sets> <associativity>)

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.



sim: ** starting functional simulation w/ predictors **

sim: ** simulation statistics **
sim_num_insn                1045897 # total number of instructions executed
sim_num_refs                 264304 # total number of loads and stores executed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate          1045897.0000 # simulation speed (in insts/sec)
sim_num_branches             167628 # total number of branches executed
sim_IPB                      6.2394 # instruction per branch
bpred_bimod.lookups          167628 # total number of bpred lookups
bpred_bimod.updates          167628 # total number of updates
bpred_bimod.addr_hits        139898 # total number of address-predicted hits
bpred_bimod.dir_hits         140006 # total number of direction-predicted hits
bpred_bimod.misses            27622 # total number of misses
bpred_bimod.jr_hits            8551 # total number of address-predicted hits for JRs
bpred_bimod.jr_seen            8552 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP 0 # total number of address-predicted hits for non-RAS JRs
bpred_bimod.jr_non_ras_seen.PP 0 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.8346 # branch address-prediction rate
bpred_bimod.bpred_dir_rate    0.8352 # branch direction-prediction rate
bpred_bimod.bpred_jr_rate    0.9999 # JR address-prediction rate
bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by 0> # non-RAS JR addr-pred rate
bpred_bimod.retstack_pushes         8554 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops         8552 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP         8552 # total number of RAS predictions used
bpred_bimod.ras_hits.PP         8551 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9999 # RAS prediction rate (i.e., RAS hits/used RAS)


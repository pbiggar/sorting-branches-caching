%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/cache4_heapsort_16_byte_cache_line_-_Branch_misses.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 12 14:32:13 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
630 915 M
63 0 V
6269 0 R
-63 0 V
546 915 M
( 2) Rshow
630 1409 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 4) Rshow
630 1904 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 6) Rshow
630 2399 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 8) Rshow
630 2893 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
630 3388 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 12) Rshow
630 3883 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 14) Rshow
630 4377 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 16) Rshow
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 18) Rshow
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(    4096) Cshow
1263 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
1896 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3163 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3796 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4429 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5062 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5696 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6329 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Branch misses per key) Cshow
grestore
3796 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1281 4739 M
(Bimodal - 512 byte table) Lshow
798 4739 M
399 0 V
630 2281 M
633 145 V
633 141 V
634 156 V
633 144 V
633 154 V
633 142 V
633 155 V
634 143 V
633 156 V
633 141 V
630 2281 Pls
1263 2426 Pls
1896 2567 Pls
2530 2723 Pls
3163 2867 Pls
3796 3021 Pls
4429 3163 Pls
5062 3318 Pls
5696 3461 Pls
6329 3617 Pls
6962 3758 Pls
998 4739 Pls
1.000 UP
1.000 UL
LT1
1281 4599 M
(Bimodal - 1024 byte table) Lshow
798 4599 M
399 0 V
630 2281 M
633 145 V
633 141 V
634 156 V
633 144 V
633 154 V
633 142 V
633 155 V
634 143 V
633 156 V
633 141 V
630 2281 Crs
1263 2426 Crs
1896 2567 Crs
2530 2723 Crs
3163 2867 Crs
3796 3021 Crs
4429 3163 Crs
5062 3318 Crs
5696 3461 Crs
6329 3617 Crs
6962 3758 Crs
998 4599 Crs
1.000 UP
1.000 UL
LT2
1281 4459 M
(Bimodal - 2048 byte table) Lshow
798 4459 M
399 0 V
630 2280 M
633 146 V
633 141 V
634 156 V
633 144 V
633 154 V
633 142 V
633 155 V
634 143 V
633 156 V
633 141 V
630 2280 Star
1263 2426 Star
1896 2567 Star
2530 2723 Star
3163 2867 Star
3796 3021 Star
4429 3163 Star
5062 3318 Star
5696 3461 Star
6329 3617 Star
6962 3758 Star
998 4459 Star
1.000 UP
1.000 UL
LT3
1281 4319 M
(2 Level Adaptive - 512 2nd level entries) Lshow
798 4319 M
399 0 V
630 2685 M
633 169 V
633 177 V
634 182 V
633 170 V
633 180 V
633 171 V
633 177 V
634 175 V
633 178 V
633 173 V
630 2685 Box
1263 2854 Box
1896 3031 Box
2530 3213 Box
3163 3383 Box
3796 3563 Box
4429 3734 Box
5062 3911 Box
5696 4086 Box
6329 4264 Box
6962 4437 Box
998 4319 Box
1.000 UP
1.000 UL
LT4
1281 4179 M
(2 Level Adaptive - 1024 2nd level entries) Lshow
798 4179 M
399 0 V
630 2579 M
633 168 V
633 159 V
634 158 V
633 158 V
633 164 V
633 158 V
633 159 V
634 162 V
633 162 V
633 158 V
630 2579 BoxF
1263 2747 BoxF
1896 2906 BoxF
2530 3064 BoxF
3163 3222 BoxF
3796 3386 BoxF
4429 3544 BoxF
5062 3703 BoxF
5696 3865 BoxF
6329 4027 BoxF
6962 4185 BoxF
998 4179 BoxF
1.000 UP
1.000 UL
LT5
1281 4039 M
(2 Level Adaptive - 2048 2nd level entries) Lshow
798 4039 M
399 0 V
630 2461 M
633 150 V
633 156 V
634 148 V
633 156 V
633 158 V
633 158 V
633 155 V
634 160 V
633 157 V
633 157 V
630 2461 Circle
1263 2611 Circle
1896 2767 Circle
2530 2915 Circle
3163 3071 Circle
3796 3229 Circle
4429 3387 Circle
5062 3542 Circle
5696 3702 Circle
6329 3859 Circle
6962 4016 Circle
998 4039 Circle
1.000 UP
1.000 UL
LT6
1281 3899 M
(2 Level Adaptive - 4096 2nd level entries) Lshow
798 3899 M
399 0 V
630 2286 M
633 129 V
633 137 V
634 133 V
633 147 V
633 147 V
633 146 V
633 148 V
634 148 V
633 151 V
633 146 V
630 2286 CircleF
1263 2415 CircleF
1896 2552 CircleF
2530 2685 CircleF
3163 2832 CircleF
3796 2979 CircleF
4429 3125 CircleF
5062 3273 CircleF
5696 3421 CircleF
6329 3572 CircleF
6962 3718 CircleF
998 3899 CircleF
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

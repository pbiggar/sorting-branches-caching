%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/on2_-_Level_1_misses.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 12 14:32:19 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
( 0) Rshow
798 915 M
63 0 V
6101 0 R
-63 0 V
714 915 M
( 500) Rshow
798 1409 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1000) Rshow
798 1904 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 1500) Rshow
798 2399 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 2000) Rshow
798 2893 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 2500) Rshow
798 3388 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 3000) Rshow
798 3883 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 3500) Rshow
798 4377 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 4000) Rshow
798 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 4500) Rshow
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
(    4096) Cshow
1414 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
2031 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2647 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3264 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3880 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4496 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5113 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5729 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6346 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Level 1 misses per key) Cshow
grestore
3880 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1449 4739 M
(on2 bubblesort2  - Fully Associative - 4MB - 32 byte line) Lshow
966 4739 M
399 0 V
798 610 M
616 285 V
617 523 V
616 1021 V
617 2030 V
798 610 Pls
1414 895 Pls
2031 1418 Pls
2647 2439 Pls
3264 4469 Pls
1166 4739 Pls
1.000 UP
1.000 UL
LT1
1449 4599 M
(on2 bubblesort2  - Fully Associative - 2MB - 32 byte line) Lshow
966 4599 M
399 0 V
798 610 M
616 285 V
617 523 V
616 1021 V
617 2030 V
798 610 Crs
1414 895 Crs
2031 1418 Crs
2647 2439 Crs
3264 4469 Crs
1166 4599 Crs
1.000 UP
1.000 UL
LT2
1449 4459 M
(on2 bubblesort2  - Direct Mapped - 4MB - 32 byte line) Lshow
966 4459 M
399 0 V
798 547 M
616 317 V
617 538 V
616 1029 V
617 2034 V
798 547 Star
1414 864 Star
2031 1402 Star
2647 2431 Star
3264 4465 Star
1166 4459 Star
1.000 UP
1.000 UL
LT3
1449 4319 M
(on2 bubblesort2  - Direct Mapped - 2MB - 32 byte line) Lshow
966 4319 M
399 0 V
798 547 M
616 317 V
617 538 V
616 1029 V
617 2034 V
798 547 Box
1414 864 Box
2031 1402 Box
2647 2431 Box
3264 4465 Box
1166 4319 Box
1.000 UP
1.000 UL
LT4
1449 4179 M
(on2 bubblesort  - Fully Associative - 4MB - 32 byte line) Lshow
966 4179 M
399 0 V
798 611 M
616 285 V
617 522 V
616 1021 V
617 2030 V
798 611 BoxF
1414 896 BoxF
2031 1418 BoxF
2647 2439 BoxF
3264 4469 BoxF
1166 4179 BoxF
1.000 UP
1.000 UL
LT5
1449 4039 M
(on2 bubblesort  - Fully Associative - 2MB - 32 byte line) Lshow
966 4039 M
399 0 V
798 611 M
616 285 V
617 522 V
616 1021 V
617 2030 V
798 611 Circle
1414 896 Circle
2031 1418 Circle
2647 2439 Circle
3264 4469 Circle
1166 4039 Circle
1.000 UP
1.000 UL
LT6
1449 3899 M
(on2 bubblesort  - Direct Mapped - 4MB - 32 byte line) Lshow
966 3899 M
399 0 V
798 548 M
616 316 V
617 538 V
616 1029 V
617 2034 V
798 548 CircleF
1414 864 CircleF
2031 1402 CircleF
2647 2431 CircleF
3264 4465 CircleF
1166 3899 CircleF
1.000 UP
1.000 UL
LT7
1449 3759 M
(on2 bubblesort  - Direct Mapped - 2MB - 32 byte line) Lshow
966 3759 M
399 0 V
798 548 M
616 316 V
617 538 V
616 1029 V
617 2034 V
798 548 TriU
1414 864 TriU
2031 1402 TriU
2647 2431 TriU
3264 4465 TriU
1166 3759 TriU
1.000 UP
1.000 UL
LT8
1449 3619 M
(on2 insertsort  - Fully Associative - 4MB - 32 byte line) Lshow
966 3619 M
399 0 V
798 472 M
616 142 V
617 278 V
616 514 V
617 1022 V
798 472 TriUF
1414 614 TriUF
2031 892 TriUF
2647 1406 TriUF
3264 2428 TriUF
1166 3619 TriUF
1.000 UP
1.000 UL
LT0
1449 3479 M
(on2 insertsort  - Fully Associative - 2MB - 32 byte line) Lshow
966 3479 M
399 0 V
798 472 M
616 142 V
617 278 V
616 514 V
617 1022 V
798 472 TriD
1414 614 TriD
2031 892 TriD
2647 1406 TriD
3264 2428 TriD
1166 3479 TriD
1.000 UP
1.000 UL
LT1
1449 3339 M
(on2 insertsort  - Direct Mapped - 4MB - 32 byte line) Lshow
966 3339 M
399 0 V
798 445 M
616 134 V
617 285 V
616 523 V
617 1029 V
798 445 TriDF
1414 579 TriDF
2031 864 TriDF
2647 1387 TriDF
3264 2416 TriDF
1166 3339 TriDF
1.000 UP
1.000 UL
LT2
1449 3199 M
(on2 insertsort  - Direct Mapped - 2MB - 32 byte line) Lshow
966 3199 M
399 0 V
798 445 M
616 134 V
617 285 V
616 523 V
617 1029 V
798 445 Dia
1414 579 Dia
2031 864 Dia
2647 1387 Dia
3264 2416 Dia
1166 3199 Dia
1.000 UP
1.000 UL
LT3
1449 3059 M
(on2 selectsort  - Fully Associative - 4MB - 32 byte line) Lshow
966 3059 M
399 0 V
798 610 M
616 285 V
617 523 V
616 1021 V
617 2030 V
798 610 DiaF
1414 895 DiaF
2031 1418 DiaF
2647 2439 DiaF
3264 4469 DiaF
1166 3059 DiaF
1.000 UP
1.000 UL
LT4
1449 2919 M
(on2 selectsort  - Fully Associative - 2MB - 32 byte line) Lshow
966 2919 M
399 0 V
798 610 M
616 285 V
617 523 V
616 1021 V
617 2030 V
798 610 Pent
1414 895 Pent
2031 1418 Pent
2647 2439 Pent
3264 4469 Pent
1166 2919 Pent
1.000 UP
1.000 UL
LT5
1449 2779 M
(on2 selectsort  - Direct Mapped - 4MB - 32 byte line) Lshow
966 2779 M
399 0 V
798 550 M
616 327 V
617 563 V
616 1083 V
617 2148 V
798 550 PentF
1414 877 PentF
2031 1440 PentF
2647 2523 PentF
3264 4671 PentF
1166 2779 PentF
1.000 UP
1.000 UL
LT6
1449 2639 M
(on2 selectsort  - Direct Mapped - 2MB - 32 byte line) Lshow
966 2639 M
399 0 V
798 550 M
616 327 V
617 563 V
616 1083 V
617 2148 V
798 550 C0
1414 877 C0
2031 1440 C0
2647 2523 C0
3264 4671 C0
1166 2639 C0
1.000 UP
1.000 UL
LT7
1449 2499 M
(on2 shakersort2  - Fully Associative - 4MB - 32 byte line) Lshow
966 2499 M
399 0 V
798 473 M
616 160 V
617 342 V
616 669 V
617 1348 V
798 473 C1
1414 633 C1
2031 975 C1
2647 1644 C1
3264 2992 C1
1166 2499 C1
1.000 UP
1.000 UL
LT8
1449 2359 M
(on2 shakersort2  - Fully Associative - 2MB - 32 byte line) Lshow
966 2359 M
399 0 V
798 473 M
616 160 V
617 342 V
616 669 V
617 1348 V
798 473 C2
1414 633 C2
2031 975 C2
2647 1644 C2
3264 2992 C2
1166 2359 C2
1.000 UP
1.000 UL
LT0
1449 2219 M
(on2 shakersort2  - Direct Mapped - 4MB - 32 byte line) Lshow
966 2219 M
399 0 V
798 473 M
616 160 V
617 342 V
616 669 V
617 1348 V
798 473 C3
1414 633 C3
2031 975 C3
2647 1644 C3
3264 2992 C3
1166 2219 C3
1.000 UP
1.000 UL
LT1
1449 2079 M
(on2 shakersort2  - Direct Mapped - 2MB - 32 byte line) Lshow
966 2079 M
399 0 V
798 473 M
616 160 V
617 342 V
616 669 V
617 1348 V
798 473 C4
1414 633 C4
2031 975 C4
2647 1644 C4
3264 2992 C4
1166 2079 C4
1.000 UP
1.000 UL
LT2
1449 1939 M
(on2 shakersort  - Fully Associative - 4MB - 32 byte line) Lshow
966 1939 M
399 0 V
798 484 M
616 191 V
617 384 V
616 748 V
617 1526 V
798 484 C5
1414 675 C5
2031 1059 C5
2647 1807 C5
3264 3333 C5
1166 1939 C5
1.000 UP
1.000 UL
LT3
1449 1799 M
(on2 shakersort  - Fully Associative - 2MB - 32 byte line) Lshow
966 1799 M
399 0 V
798 484 M
616 191 V
617 384 V
616 748 V
617 1526 V
798 484 C6
1414 675 C6
2031 1059 C6
2647 1807 C6
3264 3333 C6
1166 1799 C6
1.000 UP
1.000 UL
LT4
1449 1659 M
(on2 shakersort  - Direct Mapped - 4MB - 32 byte line) Lshow
966 1659 M
399 0 V
798 484 M
616 191 V
617 384 V
616 748 V
617 1526 V
798 484 C7
1414 675 C7
2031 1059 C7
2647 1807 C7
3264 3333 C7
1166 1659 C7
1.000 UP
1.000 UL
LT5
1449 1519 M
(on2 shakersort  - Direct Mapped - 2MB - 32 byte line) Lshow
966 1519 M
399 0 V
798 484 M
616 191 V
617 384 V
616 748 V
617 1526 V
798 484 C8
1414 675 C8
2031 1059 C8
2647 1807 C8
3264 3333 C8
1166 1519 C8
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/on2_-_Level_1_accesses.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Wed Jun 23 19:43:46 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
( 0) Rshow
882 865 M
63 0 V
6017 0 R
-63 0 V
798 865 M
( 5000) Rshow
882 1310 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 10000) Rshow
882 1756 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 15000) Rshow
882 2201 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 20000) Rshow
882 2646 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 25000) Rshow
882 3091 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 30000) Rshow
882 3536 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 35000) Rshow
882 3982 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 40000) Rshow
882 4427 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 45000) Rshow
882 4872 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 50000) Rshow
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
(    4096) Cshow
1490 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
2098 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2706 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3314 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3922 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5138 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5746 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6354 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Level 1 accesses per key) Cshow
grestore
3922 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1533 4739 M
(on2 bubblesort2 random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 4739 M
399 0 V
882 967 M
608 546 V
608 1102 V
608 2177 V
882 967 Pls
1490 1513 Pls
2098 2615 Pls
2706 4792 Pls
1250 4739 Pls
1.000 UP
1.000 UL
LT1
1533 4599 M
(on2 bubblesort2 random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 4599 M
399 0 V
882 967 M
608 546 V
608 1102 V
608 2177 V
882 967 Crs
1490 1513 Crs
2098 2615 Crs
2706 4792 Crs
1250 4599 Crs
1.000 UP
1.000 UL
LT2
1533 4459 M
(on2 bubblesort2 random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 4459 M
399 0 V
882 967 M
608 546 V
608 1102 V
608 2177 V
882 967 Star
1490 1513 Star
2098 2615 Star
2706 4792 Star
1250 4459 Star
1.000 UP
1.000 UL
LT3
1533 4319 M
(on2 bubblesort2 random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 4319 M
399 0 V
882 967 M
608 546 V
608 1102 V
608 2177 V
882 967 Box
1490 1513 Box
2098 2615 Box
2706 4792 Box
1250 4319 Box
1.000 UP
1.000 UL
LT4
1533 4179 M
(on2 bubblesort random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 4179 M
399 0 V
882 968 M
608 546 V
608 1101 V
608 2178 V
882 968 BoxF
1490 1514 BoxF
2098 2615 BoxF
2706 4793 BoxF
1250 4179 BoxF
1.000 UP
1.000 UL
LT5
1533 4039 M
(on2 bubblesort random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 4039 M
399 0 V
882 968 M
608 546 V
608 1101 V
608 2178 V
882 968 Circle
1490 1514 Circle
2098 2615 Circle
2706 4793 Circle
1250 4039 Circle
1.000 UP
1.000 UL
LT6
1533 3899 M
(on2 bubblesort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 3899 M
399 0 V
882 968 M
608 546 V
608 1101 V
608 2178 V
882 968 CircleF
1490 1514 CircleF
2098 2615 CircleF
2706 4793 CircleF
1250 3899 CircleF
1.000 UP
1.000 UL
LT7
1533 3759 M
(on2 bubblesort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 3759 M
399 0 V
882 968 M
608 546 V
608 1101 V
608 2178 V
882 968 TriU
1490 1514 TriU
2098 2615 TriU
2706 4793 TriU
1250 3759 TriU
1.000 UP
1.000 UL
LT8
1533 3619 M
(on2 insertsort random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 3619 M
399 0 V
882 695 M
608 272 V
608 559 V
608 1078 V
882 695 TriUF
1490 967 TriUF
2098 1526 TriUF
2706 2604 TriUF
1250 3619 TriUF
1.000 UP
1.000 UL
LT0
1533 3479 M
(on2 insertsort random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 3479 M
399 0 V
882 695 M
608 272 V
608 559 V
608 1078 V
882 695 TriD
1490 967 TriD
2098 1526 TriD
2706 2604 TriD
1250 3479 TriD
1.000 UP
1.000 UL
LT1
1533 3339 M
(on2 insertsort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 3339 M
399 0 V
882 695 M
608 272 V
608 559 V
608 1078 V
882 695 TriDF
1490 967 TriDF
2098 1526 TriDF
2706 2604 TriDF
1250 3339 TriDF
1.000 UP
1.000 UL
LT2
1533 3199 M
(on2 insertsort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 3199 M
399 0 V
882 695 M
608 272 V
608 559 V
608 1078 V
882 695 Dia
1490 967 Dia
2098 1526 Dia
2706 2604 Dia
1250 3199 Dia
1.000 UP
1.000 UL
LT3
1533 3059 M
(on2 selectsort random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 3059 M
399 0 V
882 786 M
608 364 V
608 730 V
608 1458 V
882 786 DiaF
1490 1150 DiaF
2098 1880 DiaF
2706 3338 DiaF
1250 3059 DiaF
1.000 UP
1.000 UL
LT4
1533 2919 M
(on2 selectsort random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 2919 M
399 0 V
882 786 M
608 364 V
608 730 V
608 1458 V
882 786 Pent
1490 1150 Pent
2098 1880 Pent
2706 3338 Pent
1250 2919 Pent
1.000 UP
1.000 UL
LT5
1533 2779 M
(on2 selectsort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 2779 M
399 0 V
882 786 M
608 364 V
608 730 V
608 1458 V
882 786 PentF
1490 1150 PentF
2098 1880 PentF
2706 3338 PentF
1250 2779 PentF
1.000 UP
1.000 UL
LT6
1533 2639 M
(on2 selectsort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 2639 M
399 0 V
882 786 M
608 364 V
608 730 V
608 1458 V
882 786 C0
1490 1150 C0
2098 1880 C0
2706 3338 C0
1250 2639 C0
1.000 UP
1.000 UL
LT7
1533 2499 M
(on2 shakersort2 random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 2499 M
399 0 V
882 846 M
608 424 V
608 869 V
608 1679 V
882 846 C1
1490 1270 C1
2098 2139 C1
2706 3818 C1
1250 2499 C1
1.000 UP
1.000 UL
LT8
1533 2359 M
(on2 shakersort2 random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 2359 M
399 0 V
882 846 M
608 424 V
608 869 V
608 1679 V
882 846 C2
1490 1270 C2
2098 2139 C2
2706 3818 C2
1250 2359 C2
1.000 UP
1.000 UL
LT0
1533 2219 M
(on2 shakersort2 random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 2219 M
399 0 V
882 846 M
608 424 V
608 869 V
608 1679 V
882 846 C3
1490 1270 C3
2098 2139 C3
2706 3818 C3
1250 2219 C3
1.000 UP
1.000 UL
LT1
1533 2079 M
(on2 shakersort2 random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 2079 M
399 0 V
882 846 M
608 424 V
608 869 V
608 1679 V
882 846 C4
1490 1270 C4
2098 2139 C4
2706 3818 C4
1250 2079 C4
1.000 UP
1.000 UL
LT2
1533 1939 M
(on2 shakersort random.org - Fully Associative - 4MB - 32 byte line) Lshow
1050 1939 M
399 0 V
882 878 M
608 457 V
608 926 V
608 1792 V
882 878 C5
1490 1335 C5
2098 2261 C5
2706 4053 C5
1250 1939 C5
1.000 UP
1.000 UL
LT3
1533 1799 M
(on2 shakersort random.org - Fully Associative - 2MB - 32 byte line) Lshow
1050 1799 M
399 0 V
882 878 M
608 457 V
608 926 V
608 1792 V
882 878 C6
1490 1335 C6
2098 2261 C6
2706 4053 C6
1250 1799 C6
1.000 UP
1.000 UL
LT4
1533 1659 M
(on2 shakersort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
1050 1659 M
399 0 V
882 878 M
608 457 V
608 926 V
608 1792 V
882 878 C7
1490 1335 C7
2098 2261 C7
2706 4053 C7
1250 1659 C7
1.000 UP
1.000 UL
LT5
1533 1519 M
(on2 shakersort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
1050 1519 M
399 0 V
882 878 M
608 457 V
608 926 V
608 1792 V
882 878 C8
1490 1335 C8
2098 2261 C8
2706 4053 C8
1250 1519 C8
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

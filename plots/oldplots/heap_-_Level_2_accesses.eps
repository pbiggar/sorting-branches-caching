%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/heap_-_Level_2_accesses.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Wed Jun 23 19:43:45 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
630 1162 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 5) Rshow
630 1904 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
630 2646 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 15) Rshow
630 3388 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 20) Rshow
630 4130 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 25) Rshow
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 30) Rshow
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(    4096) Cshow
1263 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
1896 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3163 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3796 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4429 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5062 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5696 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6329 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Level 2 accesses per key) Cshow
grestore
3796 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1281 4739 M
(base heapsort random.org - Fully Associative - 4MB - 32 byte line) Lshow
798 4739 M
399 0 V
630 815 M
633 299 V
633 375 V
634 401 V
633 408 V
633 405 V
633 398 V
633 392 V
634 386 V
633 382 V
6962 3160 L
630 815 Pls
1263 1114 Pls
1896 1489 Pls
2530 1890 Pls
3163 2298 Pls
3796 2703 Pls
4429 3101 Pls
5062 3493 Pls
5696 3879 Pls
6329 4261 Pls
6962 3160 Pls
998 4739 Pls
1.000 UP
1.000 UL
LT1
1281 4599 M
(base heapsort random.org - Fully Associative - 2MB - 32 byte line) Lshow
798 4599 M
399 0 V
630 815 M
633 299 V
633 375 V
634 401 V
633 408 V
633 405 V
633 398 V
633 392 V
634 386 V
633 382 V
6962 3160 L
630 815 Crs
1263 1114 Crs
1896 1489 Crs
2530 1890 Crs
3163 2298 Crs
3796 2703 Crs
4429 3101 Crs
5062 3493 Crs
5696 3879 Crs
6329 4261 Crs
6962 3160 Crs
998 4599 Crs
1.000 UP
1.000 UL
LT2
1281 4459 M
(base heapsort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
798 4459 M
399 0 V
630 812 M
633 368 V
633 411 V
634 426 V
633 430 V
633 424 V
633 416 V
633 405 V
634 401 V
633 392 V
6962 3323 L
630 812 Star
1263 1180 Star
1896 1591 Star
2530 2017 Star
3163 2447 Star
3796 2871 Star
4429 3287 Star
5062 3692 Star
5696 4093 Star
6329 4485 Star
6962 3323 Star
998 4459 Star
1.000 UP
1.000 UL
LT3
1281 4319 M
(base heapsort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
798 4319 M
399 0 V
630 812 M
633 368 V
633 411 V
634 426 V
633 430 V
633 424 V
633 416 V
633 405 V
634 401 V
633 392 V
6962 3323 L
630 812 Box
1263 1180 Box
1896 1591 Box
2530 2017 Box
3163 2447 Box
3796 2871 Box
4429 3287 Box
5062 3692 Box
5696 4093 Box
6329 4485 Box
6962 3323 Box
998 4319 Box
1.000 UP
1.000 UL
LT4
1281 4179 M
(cache4 heapsort random.org - Fully Associative - 2MB - 16 byte line) Lshow
798 4179 M
399 0 V
630 983 M
633 98 V
633 135 V
634 163 V
633 165 V
633 172 V
633 172 V
633 170 V
634 169 V
633 167 V
633 -588 V
630 983 BoxF
1263 1081 BoxF
1896 1216 BoxF
2530 1379 BoxF
3163 1544 BoxF
3796 1716 BoxF
4429 1888 BoxF
5062 2058 BoxF
5696 2227 BoxF
6329 2394 BoxF
6962 1806 BoxF
998 4179 BoxF
1.000 UP
1.000 UL
LT5
1281 4039 M
(cache4 heapsort random.org - Fully Associative - 4MB - 16 byte line) Lshow
798 4039 M
399 0 V
630 983 M
633 98 V
633 135 V
634 163 V
633 165 V
633 172 V
633 172 V
633 170 V
634 169 V
633 167 V
633 -588 V
630 983 Circle
1263 1081 Circle
1896 1216 Circle
2530 1379 Circle
3163 1544 Circle
3796 1716 Circle
4429 1888 Circle
5062 2058 Circle
5696 2227 Circle
6329 2394 Circle
6962 1806 Circle
998 4039 Circle
1.000 UP
1.000 UL
LT6
1281 3899 M
(cache4 heapsort random.org - Direct Mapped - 2MB - 16 byte line) Lshow
798 3899 M
399 0 V
630 1051 M
633 101 V
633 159 V
634 161 V
633 183 V
633 171 V
633 182 V
633 170 V
634 177 V
633 167 V
633 -615 V
630 1051 CircleF
1263 1152 CircleF
1896 1311 CircleF
2530 1472 CircleF
3163 1655 CircleF
3796 1826 CircleF
4429 2008 CircleF
5062 2178 CircleF
5696 2355 CircleF
6329 2522 CircleF
6962 1907 CircleF
998 3899 CircleF
1.000 UP
1.000 UL
LT7
1281 3759 M
(cache4 heapsort random.org - Direct Mapped - 4MB - 16 byte line) Lshow
798 3759 M
399 0 V
630 1051 M
633 101 V
633 159 V
634 161 V
633 183 V
633 171 V
633 182 V
633 170 V
634 177 V
633 167 V
633 -615 V
630 1051 TriU
1263 1152 TriU
1896 1311 TriU
2530 1472 TriU
3163 1655 TriU
3796 1826 TriU
4429 2008 TriU
5062 2178 TriU
5696 2355 TriU
6329 2522 TriU
6962 1907 TriU
998 3759 TriU
1.000 UP
1.000 UL
LT8
1281 3619 M
(cache heapsort random.org - Fully Associative - 4MB - 32 byte line) Lshow
798 3619 M
399 0 V
630 725 M
633 67 V
633 100 V
634 108 V
633 116 V
633 114 V
633 116 V
633 115 V
634 111 V
633 113 V
633 -398 V
630 725 TriUF
1263 792 TriUF
1896 892 TriUF
2530 1000 TriUF
3163 1116 TriUF
3796 1230 TriUF
4429 1346 TriUF
5062 1461 TriUF
5696 1572 TriUF
6329 1685 TriUF
6962 1287 TriUF
998 3619 TriUF
1.000 UP
1.000 UL
LT0
1281 3479 M
(cache heapsort random.org - Fully Associative - 2MB - 32 byte line) Lshow
798 3479 M
399 0 V
630 725 M
633 67 V
633 100 V
634 108 V
633 116 V
633 114 V
633 116 V
633 115 V
634 111 V
633 113 V
633 -398 V
630 725 TriD
1263 792 TriD
1896 892 TriD
2530 1000 TriD
3163 1116 TriD
3796 1230 TriD
4429 1346 TriD
5062 1461 TriD
5696 1572 TriD
6329 1685 TriD
6962 1287 TriD
998 3479 TriD
1.000 UP
1.000 UL
LT1
1281 3339 M
(cache heapsort random.org - Direct Mapped - 4MB - 32 byte line) Lshow
798 3339 M
399 0 V
630 780 M
633 81 V
633 102 V
634 120 V
633 123 V
633 112 V
633 124 V
633 119 V
634 111 V
633 119 V
633 -424 V
630 780 TriDF
1263 861 TriDF
1896 963 TriDF
2530 1083 TriDF
3163 1206 TriDF
3796 1318 TriDF
4429 1442 TriDF
5062 1561 TriDF
5696 1672 TriDF
6329 1791 TriDF
6962 1367 TriDF
998 3339 TriDF
1.000 UP
1.000 UL
LT2
1281 3199 M
(cache heapsort random.org - Direct Mapped - 2MB - 32 byte line) Lshow
798 3199 M
399 0 V
630 780 M
633 81 V
633 102 V
634 120 V
633 123 V
633 112 V
633 124 V
633 119 V
634 111 V
633 119 V
633 -424 V
630 780 Dia
1263 861 Dia
1896 963 Dia
2530 1083 Dia
3163 1206 Dia
3796 1318 Dia
4429 1442 Dia
5062 1561 Dia
5696 1672 Dia
6329 1791 Dia
6962 1367 Dia
998 3199 Dia
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

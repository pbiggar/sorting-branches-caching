%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/quick_-_Branches.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 12 14:32:18 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
630 1056 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
630 1692 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 20) Rshow
630 2328 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 30) Rshow
630 2964 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 40) Rshow
630 3600 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 50) Rshow
630 4236 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 60) Rshow
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 70) Rshow
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(    4096) Cshow
1263 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
1896 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3163 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3796 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4429 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5062 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5696 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6329 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Branches per key) Cshow
grestore
3796 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1281 4739 M
(base quicksort  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 4739 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 Pls
1263 1733 Pls
1896 1825 Pls
2530 1941 Pls
3163 2059 Pls
3796 2125 Pls
4429 2274 Pls
5062 2365 Pls
5696 2493 Pls
6329 2573 Pls
6962 2662 Pls
998 4739 Pls
1.000 UP
1.000 UL
LT1
1281 4599 M
(base quicksort  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 4599 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 Crs
1263 1733 Crs
1896 1825 Crs
2530 1941 Crs
3163 2059 Crs
3796 2125 Crs
4429 2274 Crs
5062 2365 Crs
5696 2493 Crs
6329 2573 Crs
6962 2662 Crs
998 4599 Crs
1.000 UP
1.000 UL
LT2
1281 4459 M
(base quicksort  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 4459 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 Star
1263 1733 Star
1896 1825 Star
2530 1941 Star
3163 2059 Star
3796 2125 Star
4429 2274 Star
5062 2365 Star
5696 2493 Star
6329 2573 Star
6962 2662 Star
998 4459 Star
1.000 UP
1.000 UL
LT3
1281 4319 M
(base quicksort  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 4319 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 Box
1263 1733 Box
1896 1825 Box
2530 1941 Box
3163 2059 Box
3796 2125 Box
4429 2274 Box
5062 2365 Box
5696 2493 Box
6329 2573 Box
6962 2662 Box
998 4319 Box
1.000 UP
1.000 UL
LT4
1281 4179 M
(base quicksort  - Bimodal - 1024 byte table) Lshow
798 4179 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 BoxF
1263 1733 BoxF
1896 1825 BoxF
2530 1941 BoxF
3163 2059 BoxF
3796 2125 BoxF
4429 2274 BoxF
5062 2365 BoxF
5696 2493 BoxF
6329 2573 BoxF
6962 2662 BoxF
998 4179 BoxF
1.000 UP
1.000 UL
LT5
1281 4039 M
(base quicksort  - Bimodal - 2048 byte table) Lshow
798 4039 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 Circle
1263 1733 Circle
1896 1825 Circle
2530 1941 Circle
3163 2059 Circle
3796 2125 Circle
4429 2274 Circle
5062 2365 Circle
5696 2493 Circle
6329 2573 Circle
6962 2662 Circle
998 4039 Circle
1.000 UP
1.000 UL
LT6
1281 3899 M
(base quicksort  - Bimodal - 512 byte table) Lshow
798 3899 M
399 0 V
630 1611 M
633 122 V
633 92 V
634 116 V
633 118 V
633 66 V
633 149 V
633 91 V
634 128 V
633 80 V
633 89 V
630 1611 CircleF
1263 1733 CircleF
1896 1825 CircleF
2530 1941 CircleF
3163 2059 CircleF
3796 2125 CircleF
4429 2274 CircleF
5062 2365 CircleF
5696 2493 CircleF
6329 2573 CircleF
6962 2662 CircleF
998 3899 CircleF
1.000 UP
1.000 UL
LT7
1281 3759 M
(cache quicksort  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 3759 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 TriU
1263 1734 TriU
1896 1827 TriU
2530 1943 TriU
3163 2060 TriU
3796 2126 TriU
4429 2275 TriU
5062 2367 TriU
5696 2495 TriU
6329 2574 TriU
6962 2663 TriU
998 3759 TriU
1.000 UP
1.000 UL
LT8
1281 3619 M
(cache quicksort  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 3619 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 TriUF
1263 1734 TriUF
1896 1827 TriUF
2530 1943 TriUF
3163 2060 TriUF
3796 2126 TriUF
4429 2275 TriUF
5062 2367 TriUF
5696 2495 TriUF
6329 2574 TriUF
6962 2663 TriUF
998 3619 TriUF
1.000 UP
1.000 UL
LT0
1281 3479 M
(cache quicksort  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 3479 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 TriD
1263 1734 TriD
1896 1827 TriD
2530 1943 TriD
3163 2060 TriD
3796 2126 TriD
4429 2275 TriD
5062 2367 TriD
5696 2495 TriD
6329 2574 TriD
6962 2663 TriD
998 3479 TriD
1.000 UP
1.000 UL
LT1
1281 3339 M
(cache quicksort  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 3339 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 TriDF
1263 1734 TriDF
1896 1827 TriDF
2530 1943 TriDF
3163 2060 TriDF
3796 2126 TriDF
4429 2275 TriDF
5062 2367 TriDF
5696 2495 TriDF
6329 2574 TriDF
6962 2663 TriDF
998 3339 TriDF
1.000 UP
1.000 UL
LT2
1281 3199 M
(cache quicksort  - Bimodal - 1024 byte table) Lshow
798 3199 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 Dia
1263 1734 Dia
1896 1827 Dia
2530 1943 Dia
3163 2060 Dia
3796 2126 Dia
4429 2275 Dia
5062 2367 Dia
5696 2495 Dia
6329 2574 Dia
6962 2663 Dia
998 3199 Dia
1.000 UP
1.000 UL
LT3
1281 3059 M
(cache quicksort  - Bimodal - 2048 byte table) Lshow
798 3059 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 DiaF
1263 1734 DiaF
1896 1827 DiaF
2530 1943 DiaF
3163 2060 DiaF
3796 2126 DiaF
4429 2275 DiaF
5062 2367 DiaF
5696 2495 DiaF
6329 2574 DiaF
6962 2663 DiaF
998 3059 DiaF
1.000 UP
1.000 UL
LT4
1281 2919 M
(cache quicksort  - Bimodal - 512 byte table) Lshow
798 2919 M
399 0 V
630 1612 M
633 122 V
633 93 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 79 V
633 89 V
630 1612 Pent
1263 1734 Pent
1896 1827 Pent
2530 1943 Pent
3163 2060 Pent
3796 2126 Pent
4429 2275 Pent
5062 2367 Pent
5696 2495 Pent
6329 2574 Pent
6962 2663 Pent
998 2919 Pent
1.000 UP
1.000 UL
LT5
1281 2779 M
(multi quicksort  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 2779 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 PentF
1263 1735 PentF
1896 1827 PentF
2530 1943 PentF
3163 2060 PentF
3796 2126 PentF
4429 2275 PentF
5062 2367 PentF
5696 2495 PentF
6329 3165 PentF
6962 3378 PentF
998 2779 PentF
1.000 UP
1.000 UL
LT6
1281 2639 M
(multi quicksort  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 2639 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C0
1263 1735 C0
1896 1827 C0
2530 1943 C0
3163 2060 C0
3796 2126 C0
4429 2275 C0
5062 2367 C0
5696 2495 C0
6329 3165 C0
6962 3378 C0
998 2639 C0
1.000 UP
1.000 UL
LT7
1281 2499 M
(multi quicksort  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 2499 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C1
1263 1735 C1
1896 1827 C1
2530 1943 C1
3163 2060 C1
3796 2126 C1
4429 2275 C1
5062 2367 C1
5696 2495 C1
6329 3165 C1
6962 3378 C1
998 2499 C1
1.000 UP
1.000 UL
LT8
1281 2359 M
(multi quicksort  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 2359 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C2
1263 1735 C2
1896 1827 C2
2530 1943 C2
3163 2060 C2
3796 2126 C2
4429 2275 C2
5062 2367 C2
5696 2495 C2
6329 3165 C2
6962 3378 C2
998 2359 C2
1.000 UP
1.000 UL
LT0
1281 2219 M
(multi quicksort  - Bimodal - 1024 byte table) Lshow
798 2219 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C3
1263 1735 C3
1896 1827 C3
2530 1943 C3
3163 2060 C3
3796 2126 C3
4429 2275 C3
5062 2367 C3
5696 2495 C3
6329 3165 C3
6962 3378 C3
998 2219 C3
1.000 UP
1.000 UL
LT1
1281 2079 M
(multi quicksort  - Bimodal - 2048 byte table) Lshow
798 2079 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C4
1263 1735 C4
1896 1827 C4
2530 1943 C4
3163 2060 C4
3796 2126 C4
4429 2275 C4
5062 2367 C4
5696 2495 C4
6329 3165 C4
6962 3378 C4
998 2079 C4
1.000 UP
1.000 UL
LT2
1281 1939 M
(multi quicksort  - Bimodal - 512 byte table) Lshow
798 1939 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 670 V
633 213 V
630 1613 C5
1263 1735 C5
1896 1827 C5
2530 1943 C5
3163 2060 C5
3796 2126 C5
4429 2275 C5
5062 2367 C5
5696 2495 C5
6329 3165 C5
6962 3378 C5
998 1939 C5
1.000 UP
1.000 UL
LT3
1281 1799 M
(multi quicksort seq  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 1799 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C6
1263 1735 C6
1896 1827 C6
2530 1943 C6
3163 2060 C6
3796 2126 C6
4429 2275 C6
5062 2367 C6
5696 2495 C6
6329 3744 C6
6962 4542 C6
998 1799 C6
1.000 UP
1.000 UL
LT4
1281 1659 M
(multi quicksort seq  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 1659 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C7
1263 1735 C7
1896 1827 C7
2530 1943 C7
3163 2060 C7
3796 2126 C7
4429 2275 C7
5062 2367 C7
5696 2495 C7
6329 3744 C7
6962 4542 C7
998 1659 C7
1.000 UP
1.000 UL
LT5
1281 1519 M
(multi quicksort seq  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 1519 M
399 0 V
-567 94 R
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C8
1263 1735 C8
1896 1827 C8
2530 1943 C8
3163 2060 C8
3796 2126 C8
4429 2275 C8
5062 2367 C8
5696 2495 C8
6329 3744 C8
6962 4542 C8
998 1519 C8
1.000 UP
1.000 UL
LT6
1281 1379 M
(multi quicksort seq  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 1379 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C9
1263 1735 C9
1896 1827 C9
2530 1943 C9
3163 2060 C9
3796 2126 C9
4429 2275 C9
5062 2367 C9
5696 2495 C9
6329 3744 C9
6962 4542 C9
998 1379 C9
1.000 UP
1.000 UL
LT7
1281 1239 M
(multi quicksort seq  - Bimodal - 1024 byte table) Lshow
798 1239 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C10
1263 1735 C10
1896 1827 C10
2530 1943 C10
3163 2060 C10
3796 2126 C10
4429 2275 C10
5062 2367 C10
5696 2495 C10
6329 3744 C10
6962 4542 C10
998 1239 C10
1.000 UP
1.000 UL
LT8
1281 1099 M
(multi quicksort seq  - Bimodal - 2048 byte table) Lshow
798 1099 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C11
1263 1735 C11
1896 1827 C11
2530 1943 C11
3163 2060 C11
3796 2126 C11
4429 2275 C11
5062 2367 C11
5696 2495 C11
6329 3744 C11
6962 4542 C11
998 1099 C11
1.000 UP
1.000 UL
LT0
1281 959 M
(multi quicksort seq  - Bimodal - 512 byte table) Lshow
798 959 M
399 0 V
630 1613 M
633 122 V
633 92 V
634 116 V
633 117 V
633 66 V
633 149 V
633 92 V
634 128 V
633 1249 V
633 798 V
630 1613 C12
1263 1735 C12
1896 1827 C12
2530 1943 C12
3163 2060 C12
3796 2126 C12
4429 2275 C12
5062 2367 C12
5696 2495 C12
6329 3744 C12
6962 4542 C12
998 959 C12
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

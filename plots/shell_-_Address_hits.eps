%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/shell_-_Address_hits.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jul 12 14:32:20 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
630 1056 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
630 1692 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 20) Rshow
630 2328 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 30) Rshow
630 2964 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 40) Rshow
630 3600 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 50) Rshow
630 4236 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 60) Rshow
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 70) Rshow
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(    4096) Cshow
1263 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
1896 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3163 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3796 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4429 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5062 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5696 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6329 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4194304) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Address hits per key) Cshow
grestore
3796 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
1281 4739 M
(gonnet shellsort  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 4739 M
399 0 V
630 2459 M
633 264 V
633 213 V
634 215 V
633 210 V
633 231 V
633 70 V
633 243 V
634 207 V
633 300 V
633 145 V
630 2459 Pls
1263 2723 Pls
1896 2936 Pls
2530 3151 Pls
3163 3361 Pls
3796 3592 Pls
4429 3662 Pls
5062 3905 Pls
5696 4112 Pls
6329 4412 Pls
6962 4557 Pls
998 4739 Pls
1.000 UP
1.000 UL
LT1
1281 4599 M
(gonnet shellsort  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 4599 M
399 0 V
630 2464 M
633 264 V
633 215 V
634 215 V
633 210 V
633 233 V
633 69 V
633 245 V
634 206 V
633 301 V
633 144 V
630 2464 Crs
1263 2728 Crs
1896 2943 Crs
2530 3158 Crs
3163 3368 Crs
3796 3601 Crs
4429 3670 Crs
5062 3915 Crs
5696 4121 Crs
6329 4422 Crs
6962 4566 Crs
998 4599 Crs
1.000 UP
1.000 UL
LT2
1281 4459 M
(gonnet shellsort  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 4459 M
399 0 V
630 2464 M
633 265 V
633 214 V
634 215 V
633 210 V
633 233 V
633 70 V
633 244 V
634 207 V
633 301 V
633 144 V
630 2464 Star
1263 2729 Star
1896 2943 Star
2530 3158 Star
3163 3368 Star
3796 3601 Star
4429 3671 Star
5062 3915 Star
5696 4122 Star
6329 4423 Star
6962 4567 Star
998 4459 Star
1.000 UP
1.000 UL
LT3
1281 4319 M
(gonnet shellsort  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 4319 M
399 0 V
630 2450 M
633 269 V
633 207 V
634 213 V
633 213 V
633 229 V
633 70 V
633 242 V
634 204 V
633 299 V
633 145 V
630 2450 Box
1263 2719 Box
1896 2926 Box
2530 3139 Box
3163 3352 Box
3796 3581 Box
4429 3651 Box
5062 3893 Box
5696 4097 Box
6329 4396 Box
6962 4541 Box
998 4319 Box
1.000 UP
1.000 UL
LT4
1281 4179 M
(gonnet shellsort  - Bimodal - 1024 byte table) Lshow
798 4179 M
399 0 V
630 2404 M
633 273 V
633 204 V
634 206 V
633 225 V
633 241 V
633 53 V
633 232 V
634 195 V
633 304 V
633 157 V
630 2404 BoxF
1263 2677 BoxF
1896 2881 BoxF
2530 3087 BoxF
3163 3312 BoxF
3796 3553 BoxF
4429 3606 BoxF
5062 3838 BoxF
5696 4033 BoxF
6329 4337 BoxF
6962 4494 BoxF
998 4179 BoxF
1.000 UP
1.000 UL
LT5
1281 4039 M
(gonnet shellsort  - Bimodal - 2048 byte table) Lshow
798 4039 M
399 0 V
630 2404 M
633 273 V
633 204 V
634 206 V
633 225 V
633 241 V
633 53 V
633 232 V
634 195 V
633 304 V
633 157 V
630 2404 Circle
1263 2677 Circle
1896 2881 Circle
2530 3087 Circle
3163 3312 Circle
3796 3553 Circle
4429 3606 Circle
5062 3838 Circle
5696 4033 Circle
6329 4337 Circle
6962 4494 Circle
998 4039 Circle
1.000 UP
1.000 UL
LT6
1281 3899 M
(gonnet shellsort  - Bimodal - 512 byte table) Lshow
798 3899 M
399 0 V
630 2404 M
633 273 V
633 204 V
634 206 V
633 225 V
633 241 V
633 53 V
633 232 V
634 195 V
633 304 V
633 157 V
630 2404 CircleF
1263 2677 CircleF
1896 2881 CircleF
2530 3087 CircleF
3163 3312 CircleF
3796 3553 CircleF
4429 3606 CircleF
5062 3838 CircleF
5696 4033 CircleF
6329 4337 CircleF
6962 4494 CircleF
998 3899 CircleF
1.000 UP
1.000 UL
LT7
1281 3759 M
(improved gonnet shellsort  - 2 Level Adaptive - 1024 2nd level entries) Lshow
798 3759 M
399 0 V
630 2167 M
633 196 V
633 302 V
634 218 V
633 168 V
633 321 V
633 73 V
633 223 V
634 196 V
633 261 V
633 162 V
630 2167 TriU
1263 2363 TriU
1896 2665 TriU
2530 2883 TriU
3163 3051 TriU
3796 3372 TriU
4429 3445 TriU
5062 3668 TriU
5696 3864 TriU
6329 4125 TriU
6962 4287 TriU
998 3759 TriU
1.000 UP
1.000 UL
LT8
1281 3619 M
(improved gonnet shellsort  - 2 Level Adaptive - 2048 2nd level entries) Lshow
798 3619 M
399 0 V
630 2175 M
633 196 V
633 304 V
634 222 V
633 172 V
633 322 V
633 70 V
633 222 V
634 196 V
633 261 V
633 161 V
630 2175 TriUF
1263 2371 TriUF
1896 2675 TriUF
2530 2897 TriUF
3163 3069 TriUF
3796 3391 TriUF
4429 3461 TriUF
5062 3683 TriUF
5696 3879 TriUF
6329 4140 TriUF
6962 4301 TriUF
998 3619 TriUF
1.000 UP
1.000 UL
LT0
1281 3479 M
(improved gonnet shellsort  - 2 Level Adaptive - 4096 2nd level entries) Lshow
798 3479 M
399 0 V
630 2181 M
633 196 V
633 304 V
634 219 V
633 177 V
633 322 V
633 71 V
633 221 V
634 196 V
633 260 V
633 160 V
630 2181 TriD
1263 2377 TriD
1896 2681 TriD
2530 2900 TriD
3163 3077 TriD
3796 3399 TriD
4429 3470 TriD
5062 3691 TriD
5696 3887 TriD
6329 4147 TriD
6962 4307 TriD
998 3479 TriD
1.000 UP
1.000 UL
LT1
1281 3339 M
(improved gonnet shellsort  - 2 Level Adaptive - 512 2nd level entries) Lshow
798 3339 M
399 0 V
630 2161 M
633 200 V
633 296 V
634 215 V
633 171 V
633 318 V
633 74 V
633 221 V
634 196 V
633 260 V
633 161 V
630 2161 TriDF
1263 2361 TriDF
1896 2657 TriDF
2530 2872 TriDF
3163 3043 TriDF
3796 3361 TriDF
4429 3435 TriDF
5062 3656 TriDF
5696 3852 TriDF
6329 4112 TriDF
6962 4273 TriDF
998 3339 TriDF
1.000 UP
1.000 UL
LT2
1281 3199 M
(improved gonnet shellsort  - Bimodal - 1024 byte table) Lshow
798 3199 M
399 0 V
630 2153 M
633 196 V
633 288 V
634 209 V
633 191 V
633 323 V
633 61 V
633 221 V
634 189 V
633 261 V
633 157 V
630 2153 Dia
1263 2349 Dia
1896 2637 Dia
2530 2846 Dia
3163 3037 Dia
3796 3360 Dia
4429 3421 Dia
5062 3642 Dia
5696 3831 Dia
6329 4092 Dia
6962 4249 Dia
998 3199 Dia
1.000 UP
1.000 UL
LT3
1281 3059 M
(improved gonnet shellsort  - Bimodal - 2048 byte table) Lshow
798 3059 M
399 0 V
630 2153 M
633 196 V
633 288 V
634 209 V
633 191 V
633 323 V
633 61 V
633 221 V
634 189 V
633 261 V
633 157 V
630 2153 DiaF
1263 2349 DiaF
1896 2637 DiaF
2530 2846 DiaF
3163 3037 DiaF
3796 3360 DiaF
4429 3421 DiaF
5062 3642 DiaF
5696 3831 DiaF
6329 4092 DiaF
6962 4249 DiaF
998 3059 DiaF
1.000 UP
1.000 UL
LT4
1281 2919 M
(improved gonnet shellsort  - Bimodal - 512 byte table) Lshow
798 2919 M
399 0 V
630 2153 M
633 196 V
633 288 V
634 209 V
633 191 V
633 323 V
633 61 V
633 221 V
634 189 V
633 261 V
633 157 V
630 2153 Pent
1263 2349 Pent
1896 2637 Pent
2530 2846 Pent
3163 3037 Pent
3796 3360 Pent
4429 3421 Pent
5062 3642 Pent
5696 3831 Pent
6329 4092 Pent
6962 4249 Pent
998 2919 Pent
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../plots/merge_-_Branch_misses.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Apr 27 23:48:46 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
462 420 M
(0) Rshow
546 977 M
63 0 V
6353 0 R
-63 0 V
462 977 M
(2) Rshow
546 1533 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(4) Rshow
546 2090 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(6) Rshow
546 2646 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(8) Rshow
546 3203 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(10) Rshow
546 3759 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(12) Rshow
546 4316 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(14) Rshow
546 4872 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(16) Rshow
1188 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(    8192) Cshow
1829 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   16384) Cshow
2471 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   32768) Cshow
3112 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(   65536) Cshow
3754 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  131072) Cshow
4396 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  262144) Cshow
5037 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(  524288) Cshow
5679 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1048576) Cshow
6320 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2097152) Cshow
1.000 UL
LTb
546 420 M
6416 0 V
0 4452 V
-6416 0 V
546 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Branch misses per key) Cshow
grestore
3754 70 M
(set size in keys) Cshow
1.000 UP
1.000 UL
LT0
6311 1673 M
(algorithm N  - Bimodal - 512 byte table) Rshow
6395 1673 M
399 0 V
546 2141 M
642 136 V
641 140 V
642 138 V
641 137 V
642 142 V
642 137 V
641 141 V
642 137 V
641 139 V
642 140 V
546 2141 Pls
1188 2277 Pls
1829 2417 Pls
2471 2555 Pls
3112 2692 Pls
3754 2834 Pls
4396 2971 Pls
5037 3112 Pls
5679 3249 Pls
6320 3388 Pls
6962 3528 Pls
6594 1673 Pls
1.000 UP
1.000 UL
LT1
6311 1533 M
(algorithm S  - Bimodal - 512 byte table) Rshow
6395 1533 M
399 0 V
546 2213 M
642 122 V
641 144 V
642 141 V
641 133 V
642 143 V
642 139 V
641 139 V
642 139 V
641 139 V
642 139 V
546 2213 Crs
1188 2335 Crs
1829 2479 Crs
2471 2620 Crs
3112 2753 Crs
3754 2896 Crs
4396 3035 Crs
5037 3174 Crs
5679 3313 Crs
6320 3452 Crs
6962 3591 Crs
6594 1533 Crs
1.000 UP
1.000 UL
LT2
6311 1393 M
(base mergesort  - Bimodal - 512 byte table) Rshow
6395 1393 M
399 0 V
546 2142 M
642 135 V
641 143 V
642 137 V
641 138 V
642 143 V
642 139 V
641 140 V
642 139 V
641 139 V
642 139 V
546 2142 Star
1188 2277 Star
1829 2420 Star
2471 2557 Star
3112 2695 Star
3754 2838 Star
4396 2977 Star
5037 3117 Star
5679 3256 Star
6320 3395 Star
6962 3534 Star
6594 1393 Star
1.000 UP
1.000 UL
LT3
6311 1253 M
(tiled mergesort  - Bimodal - 512 byte table) Rshow
6395 1253 M
399 0 V
546 2161 M
642 126 V
641 151 V
642 136 V
641 139 V
642 142 V
642 139 V
641 131 V
642 135 V
641 138 V
642 137 V
546 2161 Box
1188 2287 Box
1829 2438 Box
2471 2574 Box
3112 2713 Box
3754 2855 Box
4396 2994 Box
5037 3125 Box
5679 3260 Box
6320 3398 Box
6962 3535 Box
6594 1253 Box
1.000 UP
1.000 UL
LT4
6311 1113 M
(double tiled mergesort  - Bimodal - 512 byte table) Rshow
6395 1113 M
399 0 V
546 2171 M
642 12 V
641 255 V
642 21 V
641 251 V
642 27 V
642 254 V
641 25 V
642 254 V
641 24 V
642 254 V
546 2171 BoxF
1188 2183 BoxF
1829 2438 BoxF
2471 2459 BoxF
3112 2710 BoxF
3754 2737 BoxF
4396 2991 BoxF
5037 3016 BoxF
5679 3270 BoxF
6320 3294 BoxF
6962 3548 BoxF
6594 1113 BoxF
1.000 UP
1.000 UL
LT5
6311 973 M
(multi-mergesort  - 2 Level Adaptive - 4096 2nd level entries) Rshow
6395 973 M
399 0 V
546 2133 M
642 114 V
641 117 V
642 133 V
641 134 V
642 136 V
642 138 V
641 578 V
642 128 V
641 273 V
642 364 V
546 2133 Circle
1188 2247 Circle
1829 2364 Circle
2471 2497 Circle
3112 2631 Circle
3754 2767 Circle
4396 2905 Circle
5037 3483 Circle
5679 3611 Circle
6320 3884 Circle
6962 4248 Circle
6594 973 Circle
1.000 UP
1.000 UL
LT6
6311 833 M
(multi-mergesort  - Bimodal - 512 byte table) Rshow
6395 833 M
399 0 V
546 2161 M
642 126 V
641 151 V
642 136 V
641 139 V
642 142 V
642 139 V
641 739 V
642 164 V
641 277 V
642 238 V
546 2161 CircleF
1188 2287 CircleF
1829 2438 CircleF
2471 2574 CircleF
3112 2713 CircleF
3754 2855 CircleF
4396 2994 CircleF
5037 3733 CircleF
5679 3897 CircleF
6320 4174 CircleF
6962 4412 CircleF
6594 833 CircleF
1.000 UP
1.000 UL
LT7
6311 693 M
(double multi-mergesort  - 2 Level Adaptive - 4096 2nd level entries) Rshow
6395 693 M
399 0 V
546 2145 M
642 95 V
641 164 V
642 104 V
641 184 V
642 99 V
642 143 V
641 601 V
642 78 V
641 327 V
642 283 V
546 2145 TriU
1188 2240 TriU
1829 2404 TriU
2471 2508 TriU
3112 2692 TriU
3754 2791 TriU
4396 2934 TriU
5037 3535 TriU
5679 3613 TriU
6320 3940 TriU
6962 4223 TriU
6594 693 TriU
1.000 UP
1.000 UL
LT8
6311 553 M
(double multi-mergesort  - Bimodal - 512 byte table) Rshow
6395 553 M
399 0 V
546 2164 M
642 21 V
641 256 V
642 21 V
641 251 V
642 27 V
642 138 V
641 863 V
642 80 V
641 472 V
642 285 V
546 2164 TriUF
1188 2185 TriUF
1829 2441 TriUF
2471 2462 TriUF
3112 2713 TriUF
3754 2740 TriUF
4396 2878 TriUF
5037 3741 TriUF
5679 3821 TriUF
6320 4293 TriUF
6962 4578 TriUF
6594 553 TriUF
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

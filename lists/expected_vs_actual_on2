i: instruction count
c: cache misses
b: branch mispredictions
-: expected
=: actual
+: not written about

selection sort:

i: (sedgewick)
- N^2/2 comp
- N exch
- little variance

= has most instr. of all

c:

- bad performance
- bad temporal reuse

= true, very poor
= twice as bad as insertion sort

b:

- log n misses per key
= indeedy


insertion: 

i: (sedgewick)
- n^2 / 4 comp
- n^2 / 2 half-exchanges

- < selection
= true, twice as good

c:

- good temporal reuse
= true, best

- < selection
= true, twice as good



bubble:

i: (sedgewick)
- n^2/2 comp
- n^2/2 exch

- similar to selection
= slightly better

c:

- similar to selection
=+ slightly better 

b:

- similar to selection
= much much worse than selection


bubble2:

i:
- better all round than bubble
- fewer iterations
= worse instr

c:
= identical cache

b:
= same as bubble



shaker:

i:

- same as bubble
- slight reduction due to ending early
= actually much better

c:

- temporal reuse at ends
- more when cache isnt too big
- better thna bubble

b:

- same as bubble, except more correct due to continuous movement
= much fewer, half



shaker2:

i:

- slightly faster than bubble
= worse (cost of book-keeping)

c:
= better than shaker

b:
= same as shaker. fewer branches though, due to skipping over predictable stuff
